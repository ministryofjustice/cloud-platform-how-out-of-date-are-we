// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// GithubPRs is an autogenerated mock type for the GithubPRs type
type GithubPRs struct {
	mock.Mock
}

// ListPRs provides a mock function with given fields: repo, date, count
func (_m *GithubPRs) ListPRs(repo string, date github.date, count int) ([]string, error) {
	ret := _m.Called(repo, date, count)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string, github.date, int) []string); ok {
		r0 = rf(repo, date, count)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, github.date, int) error); ok {
		r1 = rf(repo, date, count)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGithubPRs interface {
	mock.TestingT
	Cleanup(func())
}

// NewGithubPRs creates a new instance of GithubPRs. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGithubPRs(t mockConstructorTestingTNewGithubPRs) *GithubPRs {
	mock := &GithubPRs{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
